#!/bin/sh
# Copyright 2024 Northern.tech AS
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

set -e

STATE="$1"
FILES="$2"
COMPONENT_TYPE="$3"

case "$STATE" in
    NeedsArtifactReboot)
        echo "Automatic"
        ;;
    NeedsUnpackedArtifact)
        echo "No"
        ;;
    SupportsRollback)
        echo "Yes"
        ;;

    Download)
        name="$(cat $FILES/stream-next)"
        # Download can go straight to Cleanup, since it is not supposed to have any side effects. It
        # should not go to ArtifactRollback, but let's have it as a safeguard anyway.
        mender-update install \
            --stop-before Cleanup \
            --stop-before ArtifactInstall_Enter \
            --stop-before ArtifactRollback_Enter \
            "$FILES/$name"
        test -z "$(cat $FILES/stream-next)"
        ;;

    ArtifactInstall)
        mender-update resume \
            --stop-before ArtifactCommit_Enter \
            --stop-before ArtifactRollback_Enter
        ;;

    ArtifactRollback)
        ret=0
        mender-update rollback \
            --stop-before ArtifactFailure_Enter \
            || ret=$?
        if [ $ret -eq 2 ]; then
            # Return code 2 means there is no update in progress, which means that the rollback
            # already completed.
            exit 0
        else
            exit $ret
        fi
        ;;

    ArtifactFailure)
        ret=0
        mender-update resume \
            --stop-before Cleanup \
            || ret=$?
        if [ $ret -eq 2 ]; then
            # Return code 2 means there is no update in progress, which means that the rollback
            # already completed.
            exit 0
        else
            exit $ret
        fi
        ;;

    ArtifactCommit)
        # Stopping after ArtifactCommit is important in order to prevent ArtifactCommit_Leave and
        # Cleanup from being run. This enables us to still roll back.
        mender-update commit \
            --stop-before ArtifactCommit_Leave \
            --stop-before ArtifactRollback_Enter
        ;;

    Cleanup)
        # Finish up cleanup. Note that this may also run ArtifactCommit_Leave scripts.
        ret=0
        mender-update resume || ret=$?
        if [ $ret -eq 2 ]; then
            # Return code 2 means there is no update in progress, which means that the rollback
            # already completed.
            exit 0
        else
            exit $ret
        fi
        ;;

    Provides)
        mender-update show-provides
        # Also submit device_type, which is in a separate file, not in the database. We don't know if the
        # file contains a newline, so it's important that this is done last, to avoid corrupting other
        # entries.
        grep '^device_type=' ${MENDER_DATASTORE_DIR:-/var/lib/mender}/device_type
        ;;

    Inventory)
        mender-update show-provides
        ;;

    Identity)
        if [ "$STATE" = "Identity" ]; then
            [ -f "$INSTANCE_DIR/$STATE.FAIL" ] && { log "Failing $STATE"; exit 1; }
            id=$(/usr/share/mender/identity/mender-device-identity | sed -n 's/^mac=//p')
            echo "id=$id"
        fi
        ;;
esac
